<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ck.ssm.mapper.UserMapper">

    <!--关联角色-->
    <resultMap id="user_role" type="com.ck.ssm.pojo.UserInfo">
        <id  property = "id" column = "id"></id>
        <result property = "username" column = "username"></result>
        <result property = "email" column = "email"></result>
        <result property = "password" column = "password"></result>
        <result property = "phoneNum" column = "phoneNum"></result>
        <result property = "status" column = "status"></result>
        <collection property="roles" column="id" ofType="Role"
                    select="com.ck.ssm.mapper.RoleMapper.findRoleByUserId">
        </collection>
    </resultMap>

    <!--查询所有用户-->
    <select id="findAllUser" resultType="UserInfo">
        SELECT * FROM users WHERE isdelete = 1
    </select>

    <!--根据名称查询用户关联联角色-->
    <select id="findUserByName" parameterType="string" resultMap="user_role">
        SELECT * FROM users WHERE  username = #{username} and isdelete = 1
    </select>

    <!--根据Id查询用户关联角色-->
    <select id="findUserById" parameterType="string" resultMap="user_role">
        SELECT * FROM users WHERE id = #{id} and isdelete = 1
    </select>

    <!--查询用户可关联角色-->
    <select id="findOtherRoleById" parameterType="string" resultType="Role" >
        SELECT * FROM role WHERE id not in
        (select roleId from users_role where userId=#{userId}) and isdelete = 1
    </select>

    <!--新建用户-->
    <insert id="insertUser" parameterType="UserInfo">
        INSERT INTO users(email,username,password,phoneNum,status)
        VALUES (#{email},#{username},#{password},#{phoneNum},#{status})
    </insert>

    <!--给用户添加角色-->
    <insert id="addRoleToUser" parameterType="string">
        INSERT INTO users_role (userId,roleId) VALUES (#{param1},#{param2})
    </insert>

    <!--动态SQL批量删除-->
    <sql id="userId">
        <foreach collection="list" item="user_id" open="and id in(" close=")" separator=",">
            #{user_id}
        </foreach>
    </sql>

    <!--删除用户-->
    <update id="deleteUser" parameterType="list">
        UPDATE users SET isdelete = 0
        <where>
            <include refid="userId"></include>
        </where>
    </update>
</mapper>