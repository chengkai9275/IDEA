<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ck.ssm.mapper.RoleMapper">

    <!--关联权限-->
    <resultMap id="role_permission" type="com.ck.ssm.pojo.Role">
        <id property="id" column="id"></id>
        <result property="roleName" column="roleName"></result>
        <result property="roleDesc" column="roleDesc"></result>
        <!--查询权限-->
        <collection property="permissions" column="id" ofType="Permission"
                    select="com.ck.ssm.mapper.PermissionMapper.findPerByRoleId">
        </collection>
    </resultMap>


    <!--查询所有角色-->
    <select id="findAllRole" resultType="Role">
        SELECT * FROM role WHERE isdelete = 1
    </select>

    <!--根据用户Id查询角色关联权限查询-->
    <select id="findRoleByUserId" parameterType="string" resultMap="role_permission">
        SELECT * FROM role WHERE id in
        (SELECT roleId FROM users_role WHERE userId = #{id}) and isdelete = 1
    </select>

    <!--根据Id查询角色关联权限查询-->
    <select id="findRoleById" parameterType="string" resultMap="role_permission">
        SELECT * FROM role WHERE id = #{id} and isdelete = 1
    </select>

    <!--根据角色Id查询角色可关联权限-->
    <select id="findOtherPermission" parameterType="string" resultType="Permission" >
        SELECT * FROM permission WHERE id not in
        (select permissionId from role_permission where roleId=#{roleId}) and isdelete = 1
    </select>

    <!--添加角色-->
    <insert id="insertRole" parameterType="Role">
        INSERT INTO role (roleName,roleDesc) VALUES (#{roleName},#{roledesc})
    </insert>


    <!--给角色添加权限-->
    <insert id="addPermissionToRole" parameterType="string">
        INSERT INTO role_ (roleName,roleDesc) VALUES (#{param1},#{param2})
    </insert>

    <!--动态SQL批量删除-->
    <sql id="roleId">
        <foreach collection="list" item="user_id" open="and id in(" close=")" separator=",">
            #{user_id}
        </foreach>
    </sql>

    <!--删除角色-->
    <update id="deleteRole" parameterType="list">
        UPDATE role SET isdelete = 0
        <where>
            <include refid="roleId"></include>
        </where>
    </update>


</mapper>